<!-- Hero Section con imagen de fondo -->
<div class="auth-hero-section">
    <div class="container">
        <div class="row justify-content-center align-items-center min-vh-100 py-5">
            <div class="col-md-8 col-lg-6">
                <div class="card shadow-lg border-0 rounded-4">
                    <div class="card-body p-5">
                        <div class="text-center mb-4">
                            <div class="auth-logo mb-3">
                                <i class="bi bi-person-plus-fill text-primary"></i>
                            </div>
                            <h2 class="fw-bold text-dark mb-2">Crear Cuenta</h2>
                            <p class="text-muted mb-0">Únete a EduTrack Pro</p>
                        </div>

                <form id="registerForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="first_name" class="form-label">Nombre</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-person"></i>
                                </span>
                                <input type="text" class="form-control" id="first_name" name="first_name" required>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="last_name" class="form-label">Apellido</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-person"></i>
                                </span>
                                <input type="text" class="form-control" id="last_name" name="last_name" required>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-envelope"></i>
                            </span>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="password" class="form-label">Contraseña</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-lock"></i>
                            </span>
                            <input type="password" class="form-control" id="password" name="password" required minlength="6">
                            <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                <i class="bi bi-eye"></i>
                            </button>
                        </div>
                        <div class="form-text">Mínimo 6 caracteres</div>
                    </div>

                    <div class="mb-3">
                        <label for="confirm_password" class="form-label">Confirmar Contraseña</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-lock-fill"></i>
                            </span>
                            <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="dni" class="form-label">DNI</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-card-text"></i>
                            </span>
                            <input type="text" class="form-control" id="dni" name="dni" required>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="role" class="form-label">Rol</label>
                        <select class="form-select" id="role" name="role" required>
                            <option value="">Seleccionar rol</option>
                            <option value="professor">Profesor</option>
                            <option value="preceptor">Preceptor</option>
                            <option value="director">Director</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="schoolId" class="form-label">Escuela (Opcional)</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-building"></i>
                            </span>
                            <select class="form-select" id="schoolId" name="schoolId">
                                <option value="">Seleccionar escuela</option>
                                <!-- Las opciones se cargarán dinámicamente -->
                            </select>
                        </div>
                        <div class="form-text">Si tienes una escuela asignada, selecciónala aquí</div>
                    </div>

                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="terms" name="terms" required>
                        <label class="form-check-label" for="terms">
                            Acepto los <a href="#" class="text-decoration-none">términos y condiciones</a>
                        </label>
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="bi bi-person-plus me-2"></i>Crear Cuenta
                        </button>
                    </div>
                </form>

                        <div class="text-center mt-4">
                            <p class="mb-0">¿Ya tienes cuenta? 
                                <a href="/auth/login" class="text-decoration-none fw-semibold">Inicia sesión aquí</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const registerForm = document.getElementById('registerForm');
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirm_password');
    const schoolSelect = document.getElementById('schoolId');

    // Cargar escuelas disponibles
    loadSchools();

    // Toggle password visibility
    togglePassword.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        
        const icon = this.querySelector('i');
        icon.classList.toggle('bi-eye');
        icon.classList.toggle('bi-eye-slash');
    });

    // Validate password confirmation
    confirmPasswordInput.addEventListener('input', function() {
        if (this.value !== passwordInput.value) {
            this.setCustomValidity('Las contraseñas no coinciden');
        } else {
            this.setCustomValidity('');
        }
    });

    passwordInput.addEventListener('input', function() {
        if (confirmPasswordInput.value && this.value !== confirmPasswordInput.value) {
            confirmPasswordInput.setCustomValidity('Las contraseñas no coinciden');
        } else {
            confirmPasswordInput.setCustomValidity('');
        }
    });

    // Handle form submission
    registerForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Validate passwords match
        if (passwordInput.value !== confirmPasswordInput.value) {
            showAlert('Las contraseñas no coinciden', 'danger');
            return;
        }

        const submitBtn = this.querySelector('button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        
        // Show loading state
        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Creando cuenta...';
        submitBtn.disabled = true;

        try {
            const formData = new FormData(this);
            const response = await fetch('/api/auth/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    first_name: formData.get('first_name'),
                    last_name: formData.get('last_name'),
                    email: formData.get('email'),
                    password: formData.get('password'),
                    dni: formData.get('dni'),
                    role: formData.get('role'),
                    schoolId: formData.get('schoolId') || null
                }),
                credentials: 'include'
            });

            const data = await response.json();

            if (response.ok) {
                // Success - redirect based on role
                showAlert('Cuenta creada exitosamente. Redirigiendo...', 'success');
                setTimeout(() => {
                    if (data.redirectTo) {
                        window.location.href = data.redirectTo;
                    } else {
                        window.location.href = '/dashboard';
                    }
                }, 2000);
            } else {
                // Show error
                showAlert(data.error || 'Error al crear cuenta', 'danger');
            }
        } catch (error) {
            console.error('Error:', error);
            showAlert('Error de conexión. Intenta de nuevo.', 'danger');
        } finally {
            // Reset button
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    });

    async function loadSchools() {
        try {
            const response = await fetch('/api/schools', {
                method: 'GET',
                credentials: 'include'
            });
            
            if (response.ok) {
                const data = await response.json();
                if (data.schools && data.schools.length > 0) {
                    schoolSelect.innerHTML = '<option value="">Seleccionar escuela</option>';
                    data.schools.forEach(school => {
                        const option = document.createElement('option');
                        option.value = school.id;
                        option.textContent = `${school.name} - ${school.city}`;
                        schoolSelect.appendChild(option);
                    });
                }
            }
        } catch (error) {
            console.error('Error cargando escuelas:', error);
        }
    }

    function showAlert(message, type) {
        // Remove existing alerts
        const existingAlerts = document.querySelectorAll('.alert');
        existingAlerts.forEach(alert => alert.remove());
        
        const alertContainer = document.querySelector('.card-body');
        const alert = document.createElement('div');
        alert.className = `alert alert-${type} alert-dismissible fade show`;
        alert.innerHTML = `
            <i class="bi bi-exclamation-triangle me-2"></i>${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        alertContainer.insertBefore(alert, alertContainer.firstChild);
    }
});
</script>





